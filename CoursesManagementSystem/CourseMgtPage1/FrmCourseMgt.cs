using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using CourseManageBLL;
using CourseManageModels;

namespace CourseMgtPage1
{
    public partial class FrmCourseMgt : Form
    {
        private CourseManage courseManage = new CourseManage();
        private CourseCategoryManage courseCategoryManage = new CourseCategoryManage();
        private List<Course> courseList = null;     // a buffer to store multiple course query information
        private Course course = null;   // temp place to hold a selected course information

        public FrmCourseMgt()
        {
            InitializeComponent();

            List<Course_Category> list = courseCategoryManage.getCourseCategories();
            list.Insert(0, new Course_Category { Course_Category_Id = -1, Course_Category_Name = "--Please Select--" });

            this.cbbCategory.DataSource = list;
            this.cbbCategory.DisplayMember = "Course_Category_Name";
            this.cbbCategory.ValueMember = "Course_Category_Id";
            this.cbbCategory.SelectedIndex = -1;
            //hide autogenerated columns
            this.dgvCourseList.AutoGenerateColumns = false;
            //hide modify table cells panel
            this.panelModify.Visible = false;
            // disable some buttons at the begining of the app started
            this.btnChangeCourse.Enabled = this.btnDelCourse.Enabled = false;

            this.cbbCategory_Modify.DataSource = new List<Course_Category>(list);
            this.cbbCategory_Modify.DisplayMember = "Course_Category_Name";
            this.cbbCategory_Modify.ValueMember = "Course_Category_Id";
        }
        #region Window Move by left mouse button draging

        private Point mouseOff; //position of mouse moving
        private bool leftFlag; //a flag if leftbutton clicked
        private void Frm_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                mouseOff = new Point(-e.X, -e.Y); // get the value of current position
                leftFlag = true; // when left button clicked, set flag to true
            }
        }

        private void Frm_MouseMove(object sender, MouseEventArgs e)
        {
            if (leftFlag)
            {
                Point mouseSet = Control.MousePosition;
                mouseSet.Offset(mouseOff.X, mouseOff.Y); //set position after moving
                Location = mouseSet;
            }
        }
        private void Frm_MouseUp(object sender, MouseEventArgs e)
        {
            if (leftFlag) leftFlag = false;
        }
        #endregion

        private void btnClose_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        //search course function
        private void btnSearch_Click(object sender, EventArgs e)
        {
            if ((this.cbbCategory.SelectedIndex == -1 || this.cbbCategory.SelectedIndex == 0) && this.txtCourseName.Text.Trim().Length == 0)
            {
                MessageBox.Show("Please input or select at least one condition", "Warning");
                return;
            }
            int categoryId = this.cbbCategory.SelectedIndex == -1 ? -1 : (int)(this.cbbCategory.SelectedValue);
            courseList = courseManage.CourseQuery(categoryId, this.txtCourseName.Text.Trim());
            if (courseList.Count == 0)
            {
                this.dgvCourseList.DataSource = null;
                this.lblCount.Text = "0";
                this.btnChangeCourse.Enabled = this.btnDelCourse.Enabled = false;
                MessageBox.Show("No results comes out", "Note!");
            }
            else
            {
                this.btnChangeCourse.Enabled = this.btnDelCourse.Enabled = true;
                this.dgvCourseList.DataSource = courseList;
                this.lblCount.Text = this.dgvCourseList.RowCount.ToString();
            }

           
        }

        private void dgvCourseList_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            this.panelModify.Visible = true;

         
        }

        private void btnChangeCourse_Click(object sender, EventArgs e)
        {
            if (this.dgvCourseList.SelectedRows.Count == 0)
            {
                MessageBox.Show("Please select a row to update", "Notice:");
                return;
            }
            
            //get courseId from the selected cells
            int courseId = (int)this.dgvCourseList.CurrentRow.Cells["CourseId"].Value;

            //get Course information from DB
            course = this.courseList.Where(c => c.CourseId.Equals( courseId)).First();
            //course = (from c in this.courseList where c.CourseId.Equals(courseId) select c).First();

            //show the above values inside modifypanel:
            this.txtCourseName_Modify.Text = course.CourseName;
            this.txtDescription.Text = course.CourseContent;
            this.txtCourseHours.Text = course.CourseHours.ToString();
            this.txtCredit.Text = course.Credit.ToString();
            this.lblCourseId.Text = courseId.ToString();

            this.panelModify.Visible = true;

            this.cbbCategory_Modify.SelectedValue = course.CategoryId;
        }

        private void btnDelCourse_Click(object sender, EventArgs e)
        {
            if (this.dgvCourseList.SelectedRows.Count == 0)
            {
                MessageBox.Show("Please select a row to update", "Notice:");
                return;
            }

            //get courseId from the selected cells
            int courseId = (int)this.dgvCourseList.CurrentRow.Cells["CourseId"].Value;

            Course currentCourse = new Course();

            currentCourse.CourseId = courseId;
            DialogResult result = MessageBox.Show($"Are you sure to delete Course with ID={courseId}?", "Warning", MessageBoxButtons.OKCancel, MessageBoxIcon.Question); ;
            if (result == DialogResult.Cancel) return;
            
            courseManage.delCourse(currentCourse);
            MessageBox.Show($"Course with ID={courseId} deleted!");

            this.courseList.Remove(this.courseList.Where(c => c.CourseId == courseId).First());
            //Sync course list in dgv
            this.dgvCourseList.DataSource = null;
            this.dgvCourseList.DataSource = this.courseList;
            this.lblCount.Text = this.courseList.Count.ToString();    

        }

        private void btnSaevToDB_Click(object sender, EventArgs e)
        {
            //Before save to database, Data need to be cleaned and checked for validity.
            Course course = new Course()
            {
                CourseName = this.txtCourseName_Modify.Text.Trim(),
                CourseContent = this.txtDescription.Text.Trim(),
                CourseHours = Convert.ToInt32(this.txtCourseHours.Text.Trim()),
                CourseId = Convert.ToInt32(this.lblCourseId.Text),
                TeacherId = Program.currentTeacher.TeacherId,
                CategoryId = Convert.ToInt32(this.cbbCategory_Modify.SelectedValue),
                Credit = Convert.ToInt32(this.txtCredit.Text),
                CategoryName=this.cbbCategory_Modify.Text
            };
            // Save to DB
            courseManage.ModifyCourse(course);
            this.panelModify.Visible = false;
            Course modifiedCourse = (from c in this.courseList where c.CourseId.Equals(course.CourseId) select c).First();
           // modifiedCourse = course;

            modifiedCourse.CourseName = course.CourseName;
            modifiedCourse.CourseContent = course.CourseContent;
            modifiedCourse.CourseHours = course.CourseHours;
            modifiedCourse.Credit = course.Credit;
            modifiedCourse.CategoryName = course.CategoryName;

            this.dgvCourseList.Refresh();
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.panelModify.Visible = false;
            this.txtCourseName_Modify.Text = "";
            this.txtDescription.Text = "";
            this.txtCredit.Text = "";
            this.txtCourseHours.Text = "";
            this.cbbCategory_Modify.SelectedIndex = -1;
        }
    }
}
